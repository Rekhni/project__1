'use strict';

// const birthday = Symbol('birthday');

// const user = {
//     name: "Alex",
//     surname: "Smith",
//     [birthday]: '02/08/1999',
//     showMyPublicData: function() {
//         console.log(`${this.name} ${this.surname}`);
//     }
// };

// // console.log(Object.getOwnPropertyDescriptor(user, 'name'));

// // Object.defineProperty(user, 'birthday', {value: "02/08/1999", writable: true});

// // console.log(Object.getOwnPropertyDescriptor(user, 'birthday'));

// for (let key in user) console.log(key);

// Object.defineProperties(user, {
//     name: {writable: false},
//     surname: {writable: false}
// });

// console.log(Object.getOwnPropertyDescriptor(user, birthday));

// // user.birthday = '02/02/2000';

// // console.log(user);

// // enumerable
// // writable
// // configurable




// const user = {
//     name: 'Alex',
//     surname: 'Smith',
//     birthday: '20/04/1993',
//     showMyPublicData: function() {
//         console.log(`${this.name} ${this.surname}`);
//     }
// }

// // const userMap = new Map(Object.entries(user));

// // console.log(userMap);   

// // const newUserObj = Object.fromEntries(userMap);

// // console.log(newUserObj);


// const shops = [
//     {rice: 500},
//     {oil: 200},
//     {bread: 50}
// ]


// const budget = [5000, 15000, 25000];

// const map = new Map([
//     [{paper: 1000}, 8000]
// ]);

// shops.forEach((shop, i) => {
//     map.set(shop, budget[i]);
// })

// // console.log(map);
// // console.log(map.get(shops[0]));
// // console.log(map.has(shops[0]));

// // const goods = [];
// // for (let shop of map.keys()) {
// //     goods.push(Object.keys(shop)[0]);
// // }

// // console.log(goods);

// // for (let price of map.values()) {
// //     console.log(price);
// // }

// // for (let [shop, price] of map.entries()) {
// //     console.log(price, shop);
// // }


// map.forEach((value, key, map) => {
//     console.log(key, value);
// });

// const arr = ['Reha', 'Omir', 'Reha'];

// const set = new Set(arr);

// // set.add('Ivan')
// //     .add('Reha');

// // console.log(set);

// // function unique(arr) {
// //     return Array.from(new Set(arr));
// // }

// // console.log(unique(arr));

// // set.delete(value);
// // set.has(value);
// // set.clear();
// // set.size;

// // for (let value of set) console.log(value);

// // set.forEach((value, valueAgaing) => {
// //     console.log(value, valueAgaing);
// // })

// console.log(set.values());
// console.log(set.keys());
// console.log(set.entries());


// ======================================================================


// const btns = document.querySelectorAll('button'),
//       wrapper = document.querySelector('.btn-block');

// // console.log(btns[0].classList.length);
// // console.log(btns[0].classList.item(1));
// // console.log(btns[0].classList.add('red', 'reha'));
// // console.log(btns[0].classList.remove('blue'));


// btns[0].addEventListener('click', () => {
//     // if (btns[1].classList.contains('red')) {
//     //     btns[1].classList.remove('red');
//     // } else {
//     //     btns[1].classList.add('red');
//     // }

//     btns[1].classList.toggle('red');
// })

// wrapper.addEventListener('click', (event) => {
//     if (event.target && event.target.tagName == 'BUTTON') {
//         console.log('Reha');
//     }
// });

// const newBtn = document.createElement('button');
// newBtn.classList.add('red');
// wrapper.append(newBtn);

// ===================================================================


 const btn = document.querySelector('.btn');
//  let timerId,
//     i = 0;

// function myAnimation() {
//     const elem = document.querySelector('.box');
//     let pos = 0;

//     const id = setInterval(frame, 10);

//     function frame() {
//         if (pos == 300) {
//             clearInterval(id);
//         } else {
//             pos++;
//             elem.style.top = pos + 'px';
//             elem.style.left = pos + 'px';
//         }
//     }
// }



//  btn.addEventListener('click', myAnimation);
 

// //  function reha() {
// //     if (i == 2) {
// //         clearInterval(timerId);
// //     }
// //     console.log('REHA');
// //     i++;
// //  };

// //  let id = setTimeout(function log() {
// //     console.log('Salem');
// //     id = setTimeout(log, 500);
// //  }, 500);

// ===========================================================


// const now = new Date('1999-08-02');

// console.log(now);
// console.log(now.setHours(20))
// console.log(now);

// console.log(now.getFullYear());
// console.log(now.getMonth());
// console.log(now.getDate());
// console.log(now.getDay());
// console.log(now.getHours());
// console.log(now.getUTCHours());

// console.log(now.getTimezoneOffset());

// let start = new Date();

// for (let i = 0; i < 100000; i++) {
//    let some = i ** 3;
// }

// let end = new Date();

// alert(`Операция выполнилась за ${end - start} миллисекунд`);

// ====================================================================


// const box = document.querySelector('.box'),
//       btn = document.querySelector('button');

// const width = box.clientWidth;
// const height = box.clientHeight;

// console.log(width, height);


// btn.addEventListener('click', () => {
//    // box.style.height = box.scrollHeight + 'px';
//    console.log(box.scrollTop);
// })


// console.log(box.getBoundingClientRect().top);

// const style = window.getComputedStyle(box);

// console.log(style.display);

// console.log(document.documentElement.scrollTop);

// ===============================================================

// function User(name, id) {
// //    this.name = name;
// //    this.id = id;
// //    this.human = true;
// //    this.hello = function() {
// //       console.log(`Hello ${this.name}`);
// //    }
// // }

// // User.prototype.exit = function() {
// //    console.log(`Пользователь ${this.name} ушел`);
// // }

// // const ivan = new User('Ivan', 28);
// // const alex = new User('Alex', 18);

// // ivan.hello();
// // alex.hello();

// // ivan.exit();
// // alex.exit();

// // console.log(ivan);
// // console.log(alex);


// class User {
//    constructor(name, id) {
//       this.name = name;
//       this.id = id;
//       this.human = true
//    }

//    hello() {
//       console.log(`Hello ${this.name}`);
//    }

//    exit() {
//       console.log(`Пользователь ${this.name} ушел`);
//    }
// }


// ======================================================================


// function showThis(a, b) {
//    console.log(this);
//    function sum() {
//       console.log(this);
//       return a + b;
//    }
//    console.log(sum());
// }

// showThis(4, 5);


// const obj = {
//    a: 20,
//    b: 15,
//    sum: function() {
//       function shout() {
//          console.log(this);
//       }
//       shout();
//    }
// };

// obj.sum();

// function User(name, id) {
//    this.name = name;
//    this.id = id;
//    this.human = true;
//    this.hello = function() {
//       console.log(`Hello ${this.name}`);
//    }
// }

// let ivan = new User('Ivan', 23);

// function sayName(surname) {
//    console.log(this);
//    console.log(this.name + ' ' + surname);
// }

// const user = {
//    name: 'Reha'
// };

// sayName.call(user, 'Kuanysh');
// sayName.apply(user, ['Kuanysh']);

// function count(num) {
//    return this * num;
// }

// const double = count.bind(2);
// console.log(double(5));



// 1) Обычная функция: this = window, но если use strict - undefined
// 2) Контекст у методов обьекта - сам обьект
// 3) this в конструкторах и классах - это новый экземпляр обьекта


// const btn = document.querySelector('button');

// btn.addEventListener('click', function(){
//    this.style.backgroundColor = 'green';
// });


// const obj = {
//    num: 5,
//    sayNumber: function() {
//       const say = () => {
//          console.log(this.num);
//       };
//       say();
//    }
// }  

// obj.sayNumber();


// const double = (a, b) => a * b;

// console.log(double(11, 3));



//==============================================================

// class Rectangle {
    //    constructor(height, width) {
    //       this.height = height;
    //       this.width = width;
    //    }
    
    //    calcArea() {
    //       return this.height * this.width;
    //    }
    // }
    
    // class ColoredRectangleWithText extends Rectangle {
    //    constructor(height, width, text, bgColor) {
    //       super(height, width);
    //       this.bgColor = bgColor;
    //       this.text = text;
    //    }
    
    //    showMyProps() {
    //       console.log(`Text: ${this.text}, bgColor: ${this.bgColor}`);
    //    }
    // }
    
    // // const square = new Rectangle(10, 10);
    // // const long = new Rectangle(20, 200)
    
    // // console.log(square.calcArea());
    // // console.log(long.calcArea());
    
    // const res = new ColoredRectangleWithText(30, 30, 'Reha is the best!', 'green');
    
    // res.showMyProps();
    // console.log(res.calcArea());

    // =====================================================================================

    'use strict'

// // localStorage.setItem('number', 5);

// // localStorage.clear();


// // localStorage.getItem('number');

// const checkbox = document.querySelector('#checkbox'),
//       form = document.querySelector('form'),
//       change = document.querySelector('#color');


// if (localStorage.getItem('isChecked')) {
//    checkbox.checked = true;
// }

// checkbox.addEventListener('change', () => {
//    if (localStorage.getItem('isChecked')) {
//       localStorage.removeItem('isChecked');
//       checkbox.checked = false;
//    } else {
//       localStorage.setItem('isChecked', true);
//       checkbox.checked = true;
//    }
// })

// if (localStorage.getItem('bg') === 'changed') {
//    form.style.backgroundColor = 'green'
// }

// change.addEventListener('click', () => {
//    if (localStorage.getItem('bg') === 'changed') {
//       localStorage.removeItem('bg');
//       form.style.backgroundColor = '#FFFF'
//    } else {
//       localStorage.setItem('bg', 'changed');
//       form.style.backgroundColor = 'green';
//    }
// })

// const person = {
//    name: 'Alex',
//    age: 25
// }

// const serializedPerson = JSON.stringify(person);
// localStorage.setItem('Alex', serializedPerson);

// console.log(JSON.parse(localStorage.getItem('Alex')));